<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "books".
 *
 * @property int $id
 * @property string $slug
 * @property string $language_code
 * @property string $title
 * @property string $description
 * @property string $download_link
 * @property int $views
 * @property int $created
 * @property int $creator_id
 *
 * @property BooksCategories[] $booksCategories
 * @property BooksPhotos[] $booksPhotos
 * @property BooksViews[] $booksViews
 * @property \dektrium\user\models\User $booksCreator
 */
class Books extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'books';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['slug', 'language_code'], 'required'],
            [['title', 'description', 'download_link'], 'string'],
            [['views', 'created', 'creator_id'], 'integer'],
            [['slug'], 'string', 'max' => 255],
            [['language_code'], 'string', 'max' => 2],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'slug' => 'Slug',
            'language_code' => 'Language Code',
            'title' => 'Title',
            'description' => 'Description',
            'download_link' => 'Download Link',
            'views' => 'Views',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBooksCategories()
    {
        return $this->hasMany(BooksCategories::className(), ['book_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBooksPhotos()
    {
        return $this->hasMany(BooksPhotos::className(), ['book_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBooksViews()
    {
        return $this->hasMany(BooksViews::className(), ['book_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBooksCreator(){
        return $this->hasOne((\Yii::$app->user)::className(), ['creator_id' => 'id']);
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            if(empty($this->created)){
                $this->created = time();
            }
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @return BooksPhotos|null
     */
    public function getMainBookPhoto(){
        if(array_key_exists(0, $this->booksPhotos)){
            return $this->booksPhotos[0];
        }

        return null;
    }
}
